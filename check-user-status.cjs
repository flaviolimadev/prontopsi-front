const axios = require('axios');

console.log('üîç VERIFICANDO STATUS DO USU√ÅRIO\n');

async function checkUserStatus() {
  try {
    console.log('üîê Verificando status do teste@exemplo.com...');
    
    // Primeiro, fazer login para obter token
    try {
      const loginResponse = await axios.post('http://localhost:3000/api/auth/login', {
        email: 'teste@exemplo.com',
        password: '123456'
      });
      
      console.log('‚úÖ Login bem-sucedido!');
      console.log('Token:', loginResponse.data.token);
      console.log('Usu√°rio:', {
        email: loginResponse.data.user.email,
        emailVerified: loginResponse.data.user.emailVerified,
        status: loginResponse.data.user.status
      });
      
      console.log('\nüéØ STATUS ATUAL:');
      console.log('- Email verificado:', loginResponse.data.user.emailVerified);
      console.log('- Status:', loginResponse.data.user.status);
      console.log('- Pode acessar dashboard:', loginResponse.data.user.emailVerified && loginResponse.data.user.status === 1);
      
    } catch (error) {
      console.log('‚ùå Login falhou:', error.response?.data?.message);
      
      if (error.response?.data?.message === 'Email n√£o verificado') {
        console.log('\nüí° SOLU√á√ÉO:');
        console.log('O usu√°rio precisa verificar o email primeiro');
        console.log('1. Acesse: http://localhost:8080/email-verification?email=teste@exemplo.com');
        console.log('2. Digite o c√≥digo de verifica√ß√£o recebido no email');
        console.log('3. Ap√≥s verificar, o dashboard funcionar√° corretamente');
      }
    }
    
  } catch (error) {
    console.error('‚ùå Erro no teste:', error.message);
  }
}

checkUserStatus();
