const axios = require('axios');

console.log('üîß CRIANDO E VERIFICANDO USU√ÅRIO\n');

async function createAndVerify() {
  try {
    console.log('üîê Criando usu√°rio novo...');
    
    const userData = {
      nome: 'Teste',
      sobrenome: 'Final',
      email: 'testefinal@teste.com',
      password: '123456',
      contato: '11999999999'
    };
    
    try {
      const response = await axios.post('http://localhost:3000/api/auth/register', userData);
      console.log('‚úÖ Usu√°rio criado com sucesso!');
      console.log('C√≥digo de verifica√ß√£o:', response.data.user.code);
      console.log('Email:', response.data.user.email);
      
      console.log('\nüîß VERIFICANDO EMAIL...');
      
      // Agora vamos verificar com o c√≥digo correto
      try {
        const verifyResponse = await axios.post('http://localhost:3000/api/auth/verify-email', {
          email: 'testefinal@teste.com',
          verificationCode: response.data.user.code
        });
        
        console.log('‚úÖ Verifica√ß√£o bem-sucedida!');
        console.log('Resposta:', verifyResponse.data);
        
        // Testar login ap√≥s verifica√ß√£o
        console.log('\nüîç Testando login ap√≥s verifica√ß√£o...');
        
        const loginResponse = await axios.post('http://localhost:3000/api/auth/login', {
          email: 'testefinal@teste.com',
          password: '123456'
        });
        
        console.log('‚úÖ Login bem-sucedido ap√≥s verifica√ß√£o!');
        console.log('Dados do usu√°rio:', {
          email: loginResponse.data.user.email,
          emailVerified: loginResponse.data.user.emailVerified,
          status: loginResponse.data.user.status
        });
        
        console.log('\nüéâ USU√ÅRIO VERIFICADO COM SUCESSO!');
        console.log('Agora voc√™ pode testar o dashboard:');
        console.log('1. Acesse: http://localhost:8080/#/login');
        console.log('2. Digite: testefinal@teste.com / 123456');
        console.log('3. Deve ir direto para o dashboard');
        console.log('4. Teste recarregar a p√°gina');
        
      } catch (verifyError) {
        console.log('‚ùå Erro na verifica√ß√£o:', verifyError.response?.data?.message);
      }
      
    } catch (error) {
      if (error.response?.data?.message?.includes('j√° cadastrado')) {
        console.log('‚úÖ Usu√°rio j√° existe!');
        console.log('Tente com outro email ou verifique manualmente');
      } else {
        console.log('‚ùå Erro ao criar usu√°rio:', error.response?.data?.message);
      }
    }
    
  } catch (error) {
    console.error('‚ùå Erro no teste:', error.message);
  }
}

createAndVerify();
