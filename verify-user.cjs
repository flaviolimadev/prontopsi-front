const axios = require('axios');

console.log('üîß VERIFICANDO USU√ÅRIO\n');

async function verifyUser() {
  try {
    console.log('üîê Verificando usu√°rio...');
    
    // Primeiro, vamos tentar fazer login para ver se o usu√°rio existe
    try {
      const loginResponse = await axios.post('http://localhost:3000/api/auth/login', {
        email: 'verificado@teste.com',
        password: '123456'
      });
      
      console.log('‚úÖ Login bem-sucedido!');
      console.log('Usu√°rio j√° est√° verificado!');
      console.log('Dados:', {
        email: loginResponse.data.user.email,
        emailVerified: loginResponse.data.user.emailVerified,
        status: loginResponse.data.user.status
      });
      
    } catch (error) {
      if (error.response?.data?.message === 'Email n√£o verificado') {
        console.log('‚ùå Usu√°rio n√£o verificado');
        console.log('Voc√™ precisa verificar o email primeiro');
        console.log('');
        console.log('üîß INSTRU√á√ïES:');
        console.log('1. Verifique o email: verificado@teste.com');
        console.log('2. Use o c√≥digo de verifica√ß√£o recebido');
        console.log('3. Ou acesse: http://localhost:8080/#/email-verification?email=verificado@teste.com');
        console.log('4. Digite o c√≥digo de 6 d√≠gitos');
        console.log('5. Clique "Verificar Email"');
        console.log('');
        console.log('üí° SE N√ÉO RECEBEU O EMAIL:');
        console.log('Execute: node create-verified-user-direct.cjs');
        console.log('Isso criar√° um novo usu√°rio e enviar√° o email');
      } else {
        console.log('‚ùå Erro:', error.response?.data?.message || error.message);
      }
    }
    
  } catch (error) {
    console.error('‚ùå Erro no teste:', error.message);
  }
}

verifyUser();
