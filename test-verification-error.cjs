const axios = require('axios');

// Configura√ß√£o
const API_BASE_URL = 'http://localhost:3000/api';
const TEST_EMAIL = 'teste-erro@exemplo.com';

// Fun√ß√£o para testar o erro na p√°gina de verifica√ß√£o
async function testVerificationError() {
  console.log('üß™ Testando erro na p√°gina de verifica√ß√£o...\n');
  
  try {
    // 1. Registrar usu√°rio
    console.log('üìù 1. Registrando usu√°rio...');
    try {
      const registerResponse = await axios.post(`${API_BASE_URL}/auth/register`, {
        nome: 'Teste',
        sobrenome: 'Erro',
        email: TEST_EMAIL,
        password: '123456',
        contato: '(11) 99999-9999'
      });
      
      console.log('‚úÖ Usu√°rio registrado:', registerResponse.data.message);
    } catch (error) {
      if (error.response?.status === 409) {
        console.log('‚úÖ Usu√°rio j√° existe');
      } else {
        console.log('‚ùå Erro ao registrar:', error.response?.data?.message);
        return;
      }
    }
    console.log('');
    
    // 2. Testar verifica√ß√£o com c√≥digo inv√°lido
    console.log('üìß 2. Testando verifica√ß√£o com c√≥digo inv√°lido...');
    try {
      const verifyResponse = await axios.post(`${API_BASE_URL}/auth/verify-email`, {
        email: TEST_EMAIL,
        verificationCode: '000000' // C√≥digo inv√°lido
      });
      console.log('‚ùå Verifica√ß√£o n√£o deveria ter funcionado');
    } catch (error) {
      const errorMessage = error.response?.data?.message || '';
      console.log('‚úÖ Verifica√ß√£o falhou corretamente:', errorMessage);
    }
    console.log('');
    
    // 3. Testar reenvio de c√≥digo
    console.log('üìß 3. Testando reenvio de c√≥digo...');
    try {
      const resendResponse = await axios.post(`${API_BASE_URL}/auth/resend-verification`, {
        email: TEST_EMAIL
      });
      console.log('‚úÖ C√≥digo reenviado:', resendResponse.data.message);
    } catch (error) {
      console.log('‚ùå Erro ao reenviar c√≥digo:', error.response?.data?.message || error.message);
    }
    console.log('');
    
    console.log('üìã An√°lise do problema:');
    console.log('‚úÖ Backend est√° funcionando corretamente');
    console.log('‚úÖ Verifica√ß√£o falha com c√≥digo inv√°lido (esperado)');
    console.log('‚úÖ Reenvio de c√≥digo funciona');
    console.log('');
    console.log('üéØ Para testar no frontend:');
    console.log('1. Acesse: http://localhost:8080/login');
    console.log('2. Use o email:', TEST_EMAIL);
    console.log('3. Use a senha: 123456');
    console.log('4. Clique em "Entrar"');
    console.log('5. Deve ser redirecionado para: http://localhost:8080/email-verification');
    console.log('6. Verifique o console do navegador para logs de debug');
    console.log('7. Se aparecer erro rapidamente, verifique:');
    console.log('   - Se o email est√° sendo passado corretamente');
    console.log('   - Se h√° algum erro na requisi√ß√£o');
    console.log('   - Se o AuthProvider est√° interferindo');
    console.log('');
    console.log('üîç Logs esperados no console:');
    console.log('- "üîç EmailVerification: Componente carregado"');
    console.log('- "üîç EmailVerification: Email recebido: [email]"');
    console.log('- "üîç AuthProvider: P√°gina de verifica√ß√£o detectada, pulando verifica√ß√£o"');
    
  } catch (error) {
    console.error('‚ùå Erro no teste:', error.response?.data || error.message);
  }
}

// Executar teste
testVerificationError().catch(console.error);
