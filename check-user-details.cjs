const axios = require('axios');

console.log('üîç VERIFICANDO DETALHES DO USU√ÅRIO ctrlserr@gmail.com\n');

async function checkUserDetails() {
  try {
    console.log('üîê Fazendo login para obter dados completos...');
    
    try {
      const loginResponse = await axios.post('http://localhost:3000/api/auth/login', {
        email: 'ctrlserr@gmail.com',
        password: '123456'
      });
      
      console.log('‚úÖ Login bem-sucedido!');
      console.log('Dados completos do usu√°rio:', JSON.stringify(loginResponse.data.user, null, 2));
      
      console.log('\nüéØ AN√ÅLISE:');
      console.log('- emailVerified:', loginResponse.data.user.emailVerified);
      console.log('- status:', loginResponse.data.user.status);
      console.log('- emailVerified √© undefined?', loginResponse.data.user.emailVerified === undefined);
      console.log('- emailVerified √© false?', loginResponse.data.user.emailVerified === false);
      console.log('- emailVerified √© true?', loginResponse.data.user.emailVerified === true);
      
    } catch (error) {
      console.log('‚ùå Login falhou:', error.response?.data?.message);
      
      if (error.response?.data?.message === 'Email n√£o verificado') {
        console.log('\nüí° PROBLEMA IDENTIFICADO:');
        console.log('O usu√°rio ctrlserr@gmail.com n√£o est√° verificado no banco');
        console.log('Voc√™ precisa verificar este usu√°rio primeiro');
        console.log('');
        console.log('üîß SOLU√á√ÉO:');
        console.log('1. Acesse: http://localhost:8080/#/email-verification?email=ctrlserr@gmail.com');
        console.log('2. Digite o c√≥digo de verifica√ß√£o recebido no email');
        console.log('3. Ap√≥s verificar, o dashboard funcionar√°');
      }
    }
    
  } catch (error) {
    console.error('‚ùå Erro no teste:', error.message);
  }
}

checkUserDetails();
