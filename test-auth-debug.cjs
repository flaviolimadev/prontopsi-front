const axios = require('axios');

console.log('üîç DEBUG AUTENTICA√á√ÉO - VERIFICANDO PROBLEMAS\n');

async function testAuthFlow() {
  try {
    console.log('üîê 1. Testando backend diretamente...');
    
    // Teste 1: Login com usu√°rio n√£o verificado
    try {
      await axios.post('http://localhost:3000/api/auth/login', {
        email: 'teste@exemplo.com',
        password: '123456'
      });
      console.log('‚ùå ERRO: Login funcionou quando n√£o deveria!');
    } catch (error) {
      const message = error.response?.data?.message || '';
      if (message.includes('Usu√°rio inativo')) {
        console.log('‚úÖ Backend funcionando corretamente');
      } else {
        console.log('‚ùå Resposta inesperada do backend:', message);
      }
    }
    
    console.log('\nüîê 2. Testando se o usu√°rio existe...');
    
    // Teste 2: Verificar se o usu√°rio existe
    try {
      const response = await axios.get('http://localhost:3000/api/users');
      console.log('‚úÖ API de usu√°rios acess√≠vel');
    } catch (error) {
      console.log('‚ùå Erro ao acessar API de usu√°rios:', error.response?.status);
    }
    
    console.log('\nüîê 3. Verificando se o frontend est√° rodando...');
    try {
      const response = await axios.get('http://localhost:8080');
      console.log('‚úÖ Frontend est√° rodando');
    } catch (error) {
      console.log('‚ùå Frontend n√£o est√° rodando:', error.code);
    }
    
    console.log('\nüéØ DIAGN√ìSTICO:');
    console.log('1. Backend: ‚úÖ Funcionando');
    console.log('2. Frontend: Verificar se est√° rodando');
    console.log('3. Problema provavelmente no frontend');
    
    console.log('\nüîß PR√ìXIMOS PASSOS:');
    console.log('1. Verifique se o frontend est√° rodando: npm run dev');
    console.log('2. Abra: http://localhost:8080/login');
    console.log('3. Abra DevTools (F12) ‚Üí Console');
    console.log('4. Tente fazer login e copie TODOS os logs');
    
  } catch (error) {
    console.error('‚ùå Erro no teste:', error.message);
  }
}

testAuthFlow();
